parameters:
  - name: variables
    type: string
  - name: environment
    type: string
  - name: serviceConnection
    type: string
  - name: resourceType
    type: string
    values:
      - datasources
      - indexes
      - indexers
      - skillsets
  - name: json
    type: object

stages:
  - stage: deploy
    variables:
      - group: ${{ parameters.variables }}
    jobs:
      - ${{ each deployment in parameters.json }}:
          - deployment: deploy_${{ replace(deployment.name, '-', '_') }}
            displayName: Deploy ${{ upper(deployment.name) }}
            environment: ${{ parameters .environment }}
            pool:
              name: $(agentPool)
            workspace:
              clean: all
            strategy:
              runOnce:
                deploy:
                  steps:
                    - checkout: self
                    - bash: |
                        echo "name ${{ deployment.name }}"
                        echo "path ${{ deployment.path }}"
                        echo "serviceName $(serviceName)"
                        echo "resourceType ${{ parameters.resourceType }}"
                      displayName: Display parameters
                    - task: AzureCLI@2
                      displayName: create resource ${{ parameters.resourceType }}
                      inputs:
                        azureSubscription: ${{ parameters.serviceConnection }}
                        scriptType: pscore
                        scriptLocation: inlineScript
                        inlineScript: |
                          $apiVersion = "2024-07-01"
                          
                          Write-Host "creating ${{ parameters.resourceType }} ${{ deployment.name }}, in $(serviceName), using data from ${{ deployment.payload }}" 
                          
                          $body = Get-Content ${{ deployment.payload }} | ConvertFrom-Json | ConvertTo-Json -Compress -Depth 10
                          $uri = "https://$(serviceName).search.windows.net/${{ parameters.resourceType }}('${{ deployment.name }}')?api-version=${apiVersion}"
                          
                          $tokenRequest = az account get-access-token --scope https://search.azure.com/.default | ConvertFrom-Json
                          $token = "Bearer {0}" -f $tokenRequest.accessToken
                          
                          Write-Host "Invoke-RestMethod -Method PUT -Uri $uri -Body $body"

                          Invoke-RestMethod -Method PUT -Uri $uri -Body $body -Headers @{
                            "Authorization" = $token
                            "Content-Type"  = "application/json"
                          }